{"version":3,"sources":["Context.js","url.js","Header.js","UserSignIn.js","UserSignUp.js","Courses.js","NotFound.js","CourseDetails.js","Forbidden.js","CreateCourse.js","UpdateCourse.js","PrivateRoute.js","UserSignOut.js","App.js","serviceWorker.js","index.js"],"names":["GlobalStateContext","React","createContext","GlobalStateProvider","props","useState","firstName","authenticateduser","setAuthenticateduser","isAuthenticated","setIsAuthenticated","courses","setCourses","store","get","set","signIn","email","password","callback","base64","require","url","headers","Headers","append","encode","fetch","method","then","response","json","user","console","log","_id","userId","lastName","signOut","signUp","confirmedpassword","emailAddress","body","JSON","stringify","errors","createduser","Provider","value","children","Header","context","useContext","loggedInUser","isAuth","className","to","withRouter","setEmail","setPassword","message","setMesage","callBack","flag","history","push","Consumer","Fragment","id","name","type","placeholder","onChange","e","target","onClick","Authenticate","style","color","setFirstName","setLastName","setConfirmedpassword","errorMessages","setErrorMessages","messages","map","error","index","key","href","useEffect","fetchCourses","course","pathname","state","title","version","xmlns","x","y","viewBox","points","NotFound","location","errorMessage","setErrorMessage","Object","keys","length","successmessage","source","description","estimatedTime","materialsNeeded","split","item","Forbidden","setTitle","setDescription","setEstimatedTime","setMaterialsNeeded","updateData","userid","updatedcourse","PrivateRoute","component","options","LastComponent","App","exact","path","render","CreateCourse","Courses","CourseDetails","UpdateCourse","Boolean","window","hostname","match","ReactDOM","StrictMode","document","querySelector","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.451a32f7.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { SERVERURL } from \"./url\";\r\n\r\nexport const GlobalStateContext = React.createContext();\r\n\r\n/* GlobalStateProvider :\r\n a component used to persist the authenticated user information in a global state-full component.\r\n*/\r\nconst GlobalStateProvider = (props) => {\r\n  const [authenticateduser, setAuthenticateduser] = useState({\r\n    firstName: \"Brian\",\r\n  });\r\n  // a boolean indicating whether the user is authenticated\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n\r\n  const [courses, setCourses] = useState([]);\r\n\r\n  // signIn: globally availabe method allowing the user to signIn\r\n  // callback: extra parameter to handle redirection of routes once API call (fetch request)\r\n  // completes\r\n  const signIn = (email, password, callback = () => {}) => {\r\n    let base64 = require(\"base-64\");\r\n    let url = `${SERVERURL}/user`;\r\n    let headers = new Headers();\r\n    headers.append(\r\n      \"Authorization\",\r\n      \"Basic \" + base64.encode(email + \":\" + password)\r\n    );\r\n\r\n    fetch(url, {\r\n      method: \"GET\",\r\n      headers: headers,\r\n    })\r\n      .then((response) => response.json())\r\n      .then((user) => {\r\n        console.log(user);\r\n        if (user._id) {\r\n          // update the user information from the global store once they sign in\r\n          setAuthenticateduser({\r\n            email: email,\r\n            password: password,\r\n            userId: user._id,\r\n            firstName: user.firstName,\r\n            lastName: user.lastName,\r\n          });\r\n          setIsAuthenticated(true);\r\n          callback(true);\r\n        } else {\r\n          callback(false);\r\n        }\r\n      });\r\n  };\r\n\r\n  const signUp = (\r\n    firstName,\r\n    lastName,\r\n    email,\r\n    password,\r\n    confirmedpassword,\r\n    callback = () => {}\r\n  ) => {\r\n    console.log(email);\r\n    console.log(password);\r\n    let url = `${SERVERURL}/user`;\r\n    if (confirmedpassword !== password) {\r\n      callback(false, [\"Password and confirmed password does not match\"]);\r\n      return;\r\n    }\r\n    const user = {\r\n      firstName: firstName,\r\n      lastName: lastName,\r\n      emailAddress: email,\r\n      password: password,\r\n      confirmedpassword: confirmedpassword,\r\n    };\r\n\r\n    fetch(url, {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(user),\r\n    })\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((json) => {\r\n        console.log(json);\r\n        if (json.errors) {\r\n          callback(false, json.errors);\r\n        } else {\r\n          // update the user from the global state once they sign up\r\n          console.log(json);\r\n          setAuthenticateduser({\r\n            email: json.createduser.emailAddress,\r\n            password: password,\r\n            userId: json.createduser._id,\r\n            firstName: json.createduser.firstName,\r\n            lastName: json.createduser.lastName,\r\n          });\r\n          setIsAuthenticated(true);\r\n          callback(true, \"\");\r\n        }\r\n      });\r\n  };\r\n\r\n  // signOut: globally availabe method allowing the user to signOut\r\n  const signOut = () => {\r\n    // clear the user from the global store once they sign out\r\n    setAuthenticateduser({\r\n      email: \"\",\r\n      password: \"\",\r\n      userId: 0,\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n    });\r\n    // set isAuthenticated to false once they log out\r\n    setIsAuthenticated(false);\r\n  };\r\n\r\n  const store = {\r\n    authenticateduser: { get: authenticateduser, set: setAuthenticateduser },\r\n    isAuthenticated: { get: isAuthenticated, set: setIsAuthenticated },\r\n    courses: { get: courses, set: setCourses },\r\n    signIn: signIn,\r\n    signOut: signOut,\r\n    signUp: signUp,\r\n  };\r\n\r\n  return (\r\n    <GlobalStateContext.Provider value={store}>\r\n      {props.children}\r\n    </GlobalStateContext.Provider>\r\n  );\r\n};\r\n\r\nexport default GlobalStateProvider;\r\n","// named export:, need to import with curly braces and use the same variable name\r\n// ie   import { url } from \"./url\";\r\n//  \"\" for production on Heroku\r\n// \"http://localhost:5000\" for localhost in development\r\n\r\nexport const SERVERURL = \"\";\r\n//export default url;\r\n","import React, { useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport { GlobalStateContext } from \"./Context\";\r\n\r\nfunction Header() {\r\n  const context = useContext(GlobalStateContext);\r\n  const loggedInUser = context.authenticateduser.get;\r\n  const isAuth = context.isAuthenticated.get;\r\n  return (\r\n    <>\r\n      <div className=\"header\">\r\n        <div className=\"bounds\">\r\n          <h1 className=\"header--logo\">Courses</h1>\r\n          <nav>\r\n            {isAuth && (\r\n              <span>\r\n                {\" \"}\r\n                Welcome {loggedInUser.firstName} {loggedInUser.lastName}!{\" \"}\r\n              </span>\r\n            )}\r\n\r\n            {isAuth && (\r\n              <Link className=\"signup\" to=\"/signout\">\r\n                Sign Out\r\n              </Link>\r\n            )}\r\n\r\n            {!isAuth && (\r\n              <Link className=\"signup\" to=\"/signup\">\r\n                Sign Up\r\n              </Link>\r\n            )}\r\n\r\n            {!isAuth && (\r\n              <Link className=\"signin\" to=\"/signin\">\r\n                Sign In\r\n              </Link>\r\n            )}\r\n          </nav>\r\n        </div>\r\n      </div>\r\n      <hr />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React, { useState, useContext } from \"react\";\r\nimport { withRouter } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport Header from \"./Header\";\r\nimport { GlobalStateContext } from \"./Context\";\r\n\r\nconst UserSignIn = (props) => {\r\n  const context = useContext(GlobalStateContext);\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [message, setMesage] = useState(\"\");\r\n\r\n  // callBack required for API Call,\r\n  // we don't want to redirect to \"/courses\", if the api call from the fetch context.signIn\r\n  // has not been completed yet,\r\n  // so we have to pass the redirection to /\"courses\" in a CallBack\r\n  const callBack = (flag) => {\r\n    if (!flag)\r\n      setMesage(\"From Callback: Email Address or Password is incorrect.\");\r\n    else props.history.push(\"/courses\");\r\n  };\r\n  const Authenticate = (email, password, callBack) => {\r\n    context.signIn(email, password, callBack);\r\n  };\r\n\r\n  return (\r\n    <GlobalStateContext.Consumer>\r\n      {() => (\r\n        <React.Fragment>\r\n          <div id=\"root\">\r\n            <Header />\r\n            <div className=\"bounds\">\r\n              <div className=\"grid-33 centered signin\">\r\n                <h1>User Sign In</h1>\r\n                <div>\r\n                  <form>\r\n                    <div>\r\n                      <input\r\n                        id=\"emailAddress\"\r\n                        name=\"emailAddress\"\r\n                        type=\"text\"\r\n                        className=\"\"\r\n                        placeholder=\"Email Address\"\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                      />\r\n                    </div>\r\n                    <div>\r\n                      <input\r\n                        id=\"password\"\r\n                        name=\"password\"\r\n                        type=\"password\"\r\n                        className=\"\"\r\n                        placeholder=\"Password\"\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                      />\r\n                    </div>\r\n                    <div className=\"grid-100 pad-bottom\">\r\n                      <button\r\n                        className=\"button\"\r\n                        type=\"button\"\r\n                        onClick={() => Authenticate(email, password, callBack)}\r\n                      >\r\n                        Sign In\r\n                      </button>\r\n                      <button\r\n                        className=\"button button-secondary\"\r\n                        onClick={() => props.history.push(\"/courses\")}\r\n                      >\r\n                        Cancel\r\n                      </button>\r\n                    </div>\r\n                    {message && <p style={{ color: \"red\" }}>{message}</p>}\r\n                  </form>\r\n                </div>\r\n                <p>&nbsp;</p>\r\n                <p>\r\n                  Don't have a user account?{\" \"}\r\n                  <Link to=\"/signup\">Click here</Link> to sign up!\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </React.Fragment>\r\n      )}\r\n    </GlobalStateContext.Consumer>\r\n  );\r\n};\r\n\r\nexport default withRouter(UserSignIn);\r\n","import React, { useState, useContext } from \"react\";\r\nimport \"./App.css\";\r\nimport { withRouter } from \"react-router\";\r\nimport Header from \"./Header\";\r\nimport { GlobalStateContext } from \"./Context\";\r\n\r\nfunction UserSignUp(props) {\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmedpassword, setConfirmedpassword] = useState(\"\");\r\n  const [errorMessages, setErrorMessages] = useState([]);\r\n  const context = useContext(GlobalStateContext);\r\n\r\n  console.log(errorMessages);\r\n\r\n  // callBack required for API Call,\r\n  // we don't want to redirect to \"/courses\", if the api call from the fetch context.signIn\r\n  // has not been completed yet,\r\n  // so we have to pass the redirection to /\"courses\" in a CallBack\r\n  const callBack = (flag, messages) => {\r\n    if (!flag) {\r\n      console.log(messages);\r\n      setErrorMessages(messages);\r\n    } else props.history.push(\"/courses\");\r\n  };\r\n  console.log(email);\r\n  console.log(password);\r\n  const Authenticate = (\r\n    firstName,\r\n    lastName,\r\n    email,\r\n    password,\r\n    confirmedpassword,\r\n    callBack\r\n  ) => {\r\n    context.signUp(\r\n      firstName,\r\n      lastName,\r\n      email,\r\n      password,\r\n      confirmedpassword,\r\n      callBack\r\n    );\r\n  };\r\n\r\n  return (\r\n    <GlobalStateContext.Consumer>\r\n      {() => (\r\n        <>\r\n          <Header />\r\n          <div className=\"bounds\">\r\n            <div className=\"grid-33 centered UserSignUp\">\r\n              <h1>User Sign Up</h1>\r\n              <div>\r\n                <form>\r\n                  <div>\r\n                    <input\r\n                      id=\"firstName\"\r\n                      name=\"firstName\"\r\n                      type=\"text\"\r\n                      className=\"\"\r\n                      placeholder=\"First Name\"\r\n                      value={firstName}\r\n                      onChange={(e) => setFirstName(e.target.value)}\r\n                    />\r\n                  </div>\r\n                  <div>\r\n                    <input\r\n                      id=\"lastName\"\r\n                      name=\"lastName\"\r\n                      type=\"text\"\r\n                      className=\"\"\r\n                      placeholder=\"Last Name\"\r\n                      value={lastName}\r\n                      onChange={(e) => setLastName(e.target.value)}\r\n                    />\r\n                  </div>\r\n                  <div>\r\n                    <input\r\n                      id=\"emailAddress\"\r\n                      name=\"emailAddress\"\r\n                      type=\"text\"\r\n                      className=\"\"\r\n                      placeholder=\"Email Address\"\r\n                      value={email}\r\n                      onChange={(e) => setEmail(e.target.value)}\r\n                    />\r\n                  </div>\r\n                  <div>\r\n                    <input\r\n                      id=\"password\"\r\n                      name=\"password\"\r\n                      type=\"password\"\r\n                      className=\"\"\r\n                      placeholder=\"Password\"\r\n                      value={password}\r\n                      onChange={(e) => setPassword(e.target.value)}\r\n                    />\r\n                  </div>\r\n                  <div>\r\n                    <input\r\n                      id=\"confirmPassword\"\r\n                      name=\"confirmPassword\"\r\n                      type=\"password\"\r\n                      className=\"\"\r\n                      placeholder=\"Confirm Password\"\r\n                      value={confirmedpassword}\r\n                      onChange={(e) => setConfirmedpassword(e.target.value)}\r\n                    />\r\n                  </div>\r\n                  <div className=\"grid-100 pad-bottom\">\r\n                    <button\r\n                      className=\"button\"\r\n                      type=\"button\"\r\n                      onClick={() =>\r\n                        Authenticate(\r\n                          firstName,\r\n                          lastName,\r\n                          email,\r\n                          password,\r\n                          confirmedpassword,\r\n                          callBack\r\n                        )\r\n                      }\r\n                    >\r\n                      User Sign Up\r\n                    </button>\r\n                    <button\r\n                      className=\"button button-secondary\"\r\n                      onClick={() => props.history.push(\"/courses\")}\r\n                    >\r\n                      Cancel\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n                {errorMessages.map((error, index) => (\r\n                  <p style={{ color: \"red\" }} key={index}>\r\n                    {error}\r\n                  </p>\r\n                ))}\r\n              </div>\r\n              <p>&nbsp;</p>\r\n              <p>\r\n                Already have a user account?{\" \"}\r\n                <a href=\"user-sign-in.html\">Click here</a> to sign in!\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </>\r\n      )}\r\n    </GlobalStateContext.Consumer>\r\n  );\r\n}\r\n\r\nexport default withRouter(UserSignUp);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./App.css\";\r\nimport Header from \"./Header\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { withRouter } from \"react-router\";\r\nimport { SERVERURL } from \"./url\";\r\n\r\nfunction Courses(props) {\r\n  const [courses, setCourses] = useState([]);\r\n  const user = props.user;\r\n\r\n  const fetchCourses = () => {\r\n    let url = `${SERVERURL}/courses`;\r\n    fetch(url, {\r\n      method: \"GET\",\r\n    })\r\n      .then((response) => response.json())\r\n      .then((json) => {\r\n        setCourses(json);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchCourses();\r\n  }, []);\r\n\r\n  return (\r\n    // <GlobalStateContext.Consumer>\r\n    //   {() => (\r\n    <React.Fragment>\r\n      {/* header to test  Global State\r\n          data */}\r\n      {/* <h1>{context.authenticateduser.get.firstName}</h1> */}\r\n      <Header />\r\n      <div className=\"bounds\">\r\n        {courses.map((course) => (\r\n          <div className=\"grid-33\" key={course._id}>\r\n            <Link\r\n              className=\"course--module course--link\"\r\n              to={{\r\n                pathname: \"/courses/\" + course._id,\r\n                state: {\r\n                  course: course,\r\n                },\r\n              }}\r\n            >\r\n              <h4 className=\"course--label\">Course</h4>\r\n              <h3 className=\"course--title\">{course.title}</h3>\r\n            </Link>\r\n          </div>\r\n        ))}\r\n        <div className=\"grid-33\">\r\n          <Link\r\n            className=\"course--module course--add--module\"\r\n            to={{\r\n              pathname: \"/courses/create\",\r\n              state: {\r\n                user: user,\r\n              },\r\n            }}\r\n          >\r\n            <h3 className=\"course--add--title\">\r\n              <svg\r\n                version=\"1.1\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                x=\"0px\"\r\n                y=\"0px\"\r\n                viewBox=\"0 0 13 13\"\r\n                className=\"add\"\r\n              >\r\n                <polygon points=\"7,6 7,0 6,0 6,6 0,6 0,7 6,7 6,13 7,13 7,7 13,7 13,6 \"></polygon>\r\n              </svg>\r\n              New Course\r\n            </h3>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n    //   )}\r\n    // </GlobalStateContext.Consumer>\r\n  );\r\n}\r\n\r\nexport default withRouter(Courses);\r\n","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport \"./App.css\";\r\n\r\nfunction NotFound() {\r\n  return (\r\n    <>\r\n      <Header />\r\n      <div className=\"bounds\">\r\n        <h1>Not Found</h1>\r\n        <p>Sorry! We couldn't find the page you're looking for.</p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default NotFound;\r\n","import React, { useState, useContext } from \"react\";\r\nimport { withRouter } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Header from \"./Header\";\r\nimport \"./App.css\";\r\nimport ReactMarkdown from \"react-markdown\";\r\nimport { GlobalStateContext } from \"./Context\";\r\nimport { SERVERURL } from \"./url\";\r\n\r\n// No need to use useEffect here,\r\n// Because useEffect will render after the first render\r\n// pass course details using props from Main.js\r\nfunction CourseDetails(props) {\r\n  const context = useContext(GlobalStateContext);\r\n  console.log(context);\r\n  const loggedInUser = context.authenticateduser.get;\r\n  const { state = {} } = props.location; // set state to blank if props.location is nulll\r\n  const { course = {} } = state; // set course to blank if state is nulll\r\n  // const { User: user = {} } = course; //course.User: the author of the book we got from backend,\r\n  // set user to blank if User is null\r\n  console.log(props.location);\r\n  console.log(course);\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n\r\n  console.log(course);\r\n  console.log(loggedInUser);\r\n  console.log(loggedInUser.userId);\r\n  console.log(course.user._id);\r\n  console.log(typeof loggedInUser.userId);\r\n  console.log(typeof course.user._id);\r\n  console.log(loggedInUser.userId === course.user._id);\r\n\r\n  const DeletingCourse = () => {\r\n    // if course is an empty object\r\n    if (Object.keys(course).length === 0) {\r\n      setErrorMessage(\"Course not found\");\r\n      return;\r\n    }\r\n\r\n    const email = loggedInUser.email;\r\n    const password = loggedInUser.password;\r\n\r\n    let base64 = require(\"base-64\");\r\n    let url = `${SERVERURL}/courses/delete/` + course._id;\r\n    let headers = new Headers();\r\n    headers.append(\"Content-Type\", \"application/json\");\r\n    headers.append(\r\n      \"Authorization\",\r\n      \"Basic \" + base64.encode(email + \":\" + password)\r\n    );\r\n\r\n    fetch(url, {\r\n      method: \"DELETE\",\r\n      headers: headers,\r\n    })\r\n      .then((response) => response.json())\r\n      .then((json) => {\r\n        // if response returned successmessage from backend\r\n        if (json.successmessage) {\r\n          props.history.push(\"/courses\");\r\n        } else {\r\n          setErrorMessage(json.message);\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <div>\r\n        <div className=\"actions--bar\">\r\n          <div className=\"bounds\">\r\n            <div className=\"grid-100\">\r\n              {console.log(loggedInUser.userId)}\r\n              {console.log(course.user._id)}\r\n              {/* if the course the user picked belongs to the user who logged in, then display update, delete */}\r\n              {loggedInUser.userId === course.user._id && (\r\n                <span>\r\n                  <Link\r\n                    className=\"button\"\r\n                    to={{\r\n                      pathname: \"/courses/\" + course._id + \"/update\",\r\n                      state: {\r\n                        course: course,\r\n                      },\r\n                    }}\r\n                  >\r\n                    Update Course\r\n                  </Link>\r\n                  <button\r\n                    className=\"button\"\r\n                    type=\"button\"\r\n                    onClick={DeletingCourse}\r\n                  >\r\n                    Delete Course\r\n                  </button>\r\n                </span>\r\n              )}\r\n              <Link className=\"button button-secondary\" to=\"/courses\">\r\n                Return to List\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"bounds course--detail\">\r\n          <div className=\"grid-66\">\r\n            {errorMessage && <p style={{ color: \"red\" }}>{errorMessage}</p>}\r\n            <div className=\"course--header\">\r\n              <h4 className=\"course--label\">Course</h4>\r\n              <h3 className=\"course--title\">{course.title}</h3>\r\n              <p>\r\n                By {course.user.firstName} {course.user.lastName}{\" \"}\r\n                {/*author of the book*/}\r\n              </p>\r\n            </div>\r\n            <div className=\"course--description\">\r\n              <ReactMarkdown source={course.description} />\r\n            </div>\r\n          </div>\r\n          <div className=\"grid-25 grid-right\">\r\n            <div className=\"course--stats\">\r\n              <ul className=\"course--stats--list\">\r\n                <li className=\"course--stats--list--item\">\r\n                  <h4>Estimated Time</h4>\r\n                  <h3>{course.estimatedTime}</h3>\r\n                </li>\r\n                <li className=\"course--stats--list--item\">\r\n                  <h4>Materials Needed</h4>\r\n                  <ul>\r\n                    {course.materialsNeeded &&\r\n                      course.materialsNeeded.split(\"*\").map(\r\n                        (item, index) =>\r\n                          item && (\r\n                            <li key={index}>\r\n                              <ReactMarkdown source={item}></ReactMarkdown>\r\n                            </li>\r\n                          )\r\n                      )}\r\n                  </ul>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\nexport default withRouter(CourseDetails);\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport Header from \"./Header\";\r\n\r\nfunction Forbidden() {\r\n  return (\r\n    <>\r\n      <Header />\r\n      <div className=\"bounds\">\r\n        <h1>Forbidden</h1>\r\n        <p>Oh oh! You can't access this page.</p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Forbidden;\r\n","import React, { useState, useContext } from \"react\";\r\nimport { withRouter } from \"react-router\";\r\nimport Header from \"./Header\";\r\nimport \"./App.css\";\r\nimport { GlobalStateContext } from \"./Context\";\r\nimport { SERVERURL } from \"./url\";\r\n\r\nfunction CreateCourse(props) {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [estimatedTime, setEstimatedTime] = useState(\"\");\r\n  const [materialsNeeded, setMaterialsNeeded] = useState(\"\");\r\n  const [errorMessages, setErrorMessages] = useState(\"\");\r\n  const context = useContext(GlobalStateContext);\r\n  const loggedInUser = context.authenticateduser.get;\r\n\r\n  console.log(errorMessages);\r\n\r\n  const AddCourse = () => {\r\n    const course = {\r\n      title: title,\r\n      description: description,\r\n      estimatedTime: estimatedTime,\r\n      materialsNeeded: materialsNeeded,\r\n      userId: loggedInUser.userId, // add a book belonging to that user\r\n    };\r\n\r\n    console.log(course);\r\n\r\n    const email = loggedInUser.email;\r\n    const password = loggedInUser.password;\r\n    let base64 = require(\"base-64\");\r\n    let url = `${SERVERURL}/courses/create`;\r\n    let headers = new Headers();\r\n    headers.append(\"Content-Type\", \"application/json\");\r\n    headers.append(\r\n      \"Authorization\",\r\n      \"Basic \" + base64.encode(email + \":\" + password)\r\n    );\r\n\r\n    console.log(url);\r\n\r\n    fetch(url, {\r\n      method: \"POST\",\r\n      headers: headers,\r\n      body: JSON.stringify(course),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((json) => {\r\n        // if the course Id could be found from the db\r\n        if (json._id) {\r\n          props.history.push(\"/courses\");\r\n        } else {\r\n          setErrorMessages(json.errors);\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <div className=\"bounds course--detail\">\r\n        <h1>Create Course</h1>\r\n        <div>\r\n          <div>\r\n            <div className=\"validation-errors\">\r\n              {errorMessages &&\r\n                errorMessages.map((error, index) => (\r\n                  <p style={{ color: \"red\" }} key={index}>\r\n                    {error}\r\n                  </p>\r\n                ))}\r\n            </div>\r\n          </div>\r\n          <form>\r\n            <div className=\"grid-66\">\r\n              <div className=\"course--header\">\r\n                <h4 className=\"course--label\">Course</h4>\r\n                <div>\r\n                  <input\r\n                    id=\"title\"\r\n                    name=\"title\"\r\n                    type=\"text\"\r\n                    className=\"input-title course--title--input\"\r\n                    placeholder=\"Course title...\"\r\n                    value={title}\r\n                    onChange={(e) => setTitle(e.target.value)}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"course--description\">\r\n                <div>\r\n                  <textarea\r\n                    id=\"description\"\r\n                    name=\"description\"\r\n                    className=\"\"\r\n                    placeholder=\"Course description...\"\r\n                    value={description}\r\n                    onChange={(e) => setDescription(e.target.value)}\r\n                  ></textarea>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"grid-25 grid-right\">\r\n              <div className=\"course--stats\">\r\n                <ul className=\"course--stats--list\">\r\n                  <li className=\"course--stats--list--item\">\r\n                    <h4>Estimated Time</h4>\r\n                    <div>\r\n                      <input\r\n                        id=\"estimatedTime\"\r\n                        name=\"estimatedTime\"\r\n                        type=\"text\"\r\n                        className=\"course--time--input\"\r\n                        placeholder=\"Hours\"\r\n                        value={estimatedTime}\r\n                        onChange={(e) => setEstimatedTime(e.target.value)}\r\n                      />\r\n                    </div>\r\n                  </li>\r\n                  <li className=\"course--stats--list--item\">\r\n                    <h4>Materials Needed</h4>\r\n                    <div>\r\n                      <textarea\r\n                        id=\"materialsNeeded\"\r\n                        name=\"materialsNeeded\"\r\n                        className=\"\"\r\n                        placeholder=\"List materials...\"\r\n                        value={materialsNeeded}\r\n                        onChange={(e) => setMaterialsNeeded(e.target.value)}\r\n                      ></textarea>\r\n                    </div>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n            <div className=\"grid-100 pad-bottom\">\r\n              <button className=\"button\" type=\"button\" onClick={AddCourse}>\r\n                Create Course\r\n              </button>\r\n              <button\r\n                className=\"button button-secondary\"\r\n                //onClick=\"event.preventDefault(); location.href='index.html';\"\r\n                onClick={() => props.history.push(\"/courses\")}\r\n              >\r\n                Cancel\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\n// export as WithRouter to access props\r\nexport default withRouter(CreateCourse);\r\n","import React, { useState, useContext } from \"react\";\r\nimport \"./App.css\";\r\nimport { withRouter } from \"react-router\";\r\nimport { GlobalStateContext } from \"./Context\";\r\nimport Header from \"./Header\";\r\nimport { SERVERURL } from \"./url\";\r\n\r\nfunction UpdateCourse(props) {\r\n  const context = useContext(GlobalStateContext);\r\n  const loggedInUser = context.authenticateduser.get;\r\n  const { state = {} } = props.location; // set state to blank if props.location is null\r\n  const { course = {} } = state; // set course to blank if state is null\r\n  console.log(course);\r\n  const [title, setTitle] = useState(course.title);\r\n  const [description, setDescription] = useState(course.description);\r\n  const [estimatedTime, setEstimatedTime] = useState(course.estimatedTime);\r\n  const [materialsNeeded, setMaterialsNeeded] = useState(\r\n    course.materialsNeeded\r\n  );\r\n  const [errorMessage, setErrorMessage] = useState([]);\r\n\r\n  const UpdatingCourse = () => {\r\n    // if course is  an empty object\r\n    if (Object.keys(course).length === 0) {\r\n      setErrorMessage([\"Course not found\"]);\r\n      return;\r\n    }\r\n    const updateData = {\r\n      title: title,\r\n      description: description,\r\n      estimatedTime: estimatedTime,\r\n      materialsNeeded: materialsNeeded,\r\n      userId: course.userid,\r\n    };\r\n\r\n    const email = loggedInUser.email;\r\n    const password = loggedInUser.password;\r\n\r\n    let base64 = require(\"base-64\");\r\n    let url = `${SERVERURL}/courses/update/` + course._id;\r\n    let headers = new Headers();\r\n    headers.append(\"Content-Type\", \"application/json\");\r\n    headers.append(\r\n      \"Authorization\",\r\n      \"Basic \" + base64.encode(email + \":\" + password)\r\n    );\r\n\r\n    fetch(url, {\r\n      method: \"PUT\",\r\n      headers: headers,\r\n      body: JSON.stringify(updateData),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((json) => {\r\n        console.log(json);\r\n        // if the course Id could be found from the db\r\n        if (json.updatedcourse._id) {\r\n          props.history.push(\"/courses\");\r\n        } else {\r\n          setErrorMessage(json.errors);\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <div className=\"bounds course--detail\">\r\n        <h1>Update Course</h1>\r\n        {errorMessage.length > 0 &&\r\n          errorMessage.map((error, index) => (\r\n            <p key={index} style={{ color: \"red\" }}>\r\n              {\" \"}\r\n              {error}{\" \"}\r\n            </p>\r\n          ))}\r\n        <div>\r\n          <form>\r\n            <div className=\"grid-66\">\r\n              <div className=\"course--header\">\r\n                <h4 className=\"course--label\">Course</h4>\r\n                <div>\r\n                  <input\r\n                    id=\"title\"\r\n                    name=\"title\"\r\n                    type=\"text\"\r\n                    className=\"input-title course--title--input\"\r\n                    placeholder=\"Course title...\"\r\n                    value={title}\r\n                    onChange={(e) => setTitle(e.target.value)}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"course--description\">\r\n                <div>\r\n                  <textarea\r\n                    id=\"description\"\r\n                    name=\"description\"\r\n                    className=\"\"\r\n                    placeholder=\"Course description...\"\r\n                    value={description}\r\n                    onChange={(e) => setDescription(e.target.value)}\r\n                  ></textarea>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"grid-25 grid-right\">\r\n              <div className=\"course--stats\">\r\n                <ul className=\"course--stats--list\">\r\n                  <li className=\"course--stats--list--item\">\r\n                    <h4>Estimated Time</h4>\r\n                    <div>\r\n                      <input\r\n                        id=\"estimatedTime\"\r\n                        name=\"estimatedTime\"\r\n                        type=\"text\"\r\n                        className=\"course--time--input\"\r\n                        placeholder=\"Hours\"\r\n                        value={estimatedTime}\r\n                        onChange={(e) => setEstimatedTime(e.target.value)}\r\n                      />\r\n                    </div>\r\n                  </li>\r\n                  <li className=\"course--stats--list--item\">\r\n                    <h4>Materials Needed</h4>\r\n                    <div>\r\n                      <textarea\r\n                        id=\"materialsNeeded\"\r\n                        name=\"materialsNeeded\"\r\n                        className=\"\"\r\n                        placeholder=\"List materials...\"\r\n                        value={materialsNeeded}\r\n                        onChange={(e) => setMaterialsNeeded(e.target.value)}\r\n                      ></textarea>\r\n                    </div>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n            <div className=\"grid-100 pad-bottom\">\r\n              <button className=\"button\" type=\"button\" onClick={UpdatingCourse}>\r\n                Update Course\r\n              </button>\r\n              <button\r\n                className=\"button button-secondary\"\r\n                //redirect to course details if user clicks on cancel\r\n                // with state containing the information of the course\r\n                // to be passed to CourseDetails as props\r\n                onClick={() =>\r\n                  props.history.push({\r\n                    pathname: \"/courses/\" + course._id,\r\n                    state: {\r\n                      course: course,\r\n                    },\r\n                  })\r\n                }\r\n              >\r\n                Cancel\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default withRouter(UpdateCourse);\r\n","import React, { useContext } from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport Forbidden from \"./Forbidden\";\r\nimport { GlobalStateContext } from \"./Context\";\r\n\r\nconst PrivateRoute = ({ component, ...options }) => {\r\n  const context = useContext(GlobalStateContext);\r\n  const isAuth = context.isAuthenticated.get;\r\n  const LastComponent = isAuth === true ? component : Forbidden;\r\n  return <Route {...options} component={LastComponent} />;\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import React, { useContext } from \"react\";\r\nimport \"./App.css\";\r\nimport Header from \"./Header\";\r\nimport { withRouter } from \"react-router\";\r\nimport { GlobalStateContext } from \"./Context\";\r\n\r\nfunction UserSignOut(props) {\r\n  const context = useContext(GlobalStateContext);\r\n  const SignOut = () => {\r\n    context.signOut();\r\n    props.history.push(\"/signin\");\r\n  };\r\n\r\n  return (\r\n    <GlobalStateContext.Consumer>\r\n      {() => (\r\n        <>\r\n          <Header />\r\n          <div className=\"bounds\">\r\n            <h1>Sign Out</h1>\r\n            <p>Are u sure you want to sign out? </p>\r\n            <button className=\"button\" type=\"button\" onClick={() => SignOut()}>\r\n              Sign Out\r\n            </button>\r\n          </div>\r\n        </>\r\n      )}\r\n    </GlobalStateContext.Consumer>\r\n  );\r\n}\r\n\r\nexport default withRouter(UserSignOut);\r\n","import React, { Fragment } from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport UserSignIn from \"./UserSignIn\";\r\nimport UserSignUp from \"./UserSignUp\";\r\nimport Courses from \"./Courses\";\r\nimport NotFound from \"./NotFound\";\r\nimport CourseDetails from \"./CourseDetails\";\r\nimport Forbidden from \"./Forbidden\";\r\nimport CreateCourse from \"./CreateCourse\";\r\nimport UpdateCourse from \"./UpdateCourse\";\r\nimport PrivateRoute from \"./PrivateRoute\";\r\nimport UserSignOut from \"./UserSignOut\";\r\nimport GlobalStateProvider from \"./Context.js\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <GlobalStateProvider>\r\n      <Fragment>\r\n        <Switch>\r\n          <Route exact path=\"/\" render={() => <Courses />} />\r\n          <Route exact path=\"/signin\" render={() => <UserSignIn />} />\r\n          <Route exact path=\"/signup\" render={() => <UserSignUp />} />\r\n          <Route exact path=\"/signout\" render={() => <UserSignOut />} />\r\n          <PrivateRoute\r\n            component={CreateCourse}\r\n            path=\"/courses/create\"\r\n          ></PrivateRoute>\r\n          <Route component={Courses} exact path=\"/courses\"></Route>\r\n          <Route component={CourseDetails} exact path=\"/courses/:id\"></Route>\r\n          <PrivateRoute\r\n            component={UpdateCourse}\r\n            exact\r\n            path={\"/courses/:id/update\"}\r\n          ></PrivateRoute>\r\n\r\n          <Route exact path=\"/forbidden\" component={Forbidden} />\r\n          <Route render={() => <NotFound />} />\r\n        </Switch>\r\n      </Fragment>\r\n    </GlobalStateProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.querySelector(\"#root\")\n);\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n "],"sourceRoot":""}