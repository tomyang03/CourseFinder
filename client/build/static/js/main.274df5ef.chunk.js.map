{"version":3,"sources":["Config.js","Context.js","Header.js","UserSignIn.js","UserSignUp.js","Courses.js","NotFound.js","CourseDetails.js","Forbidden.js","CreateCourse.js","UpdateCourse.js","PrivateRoute.js","UserSignOut.js","Homepage.js","App.js","serviceWorker.js","index.js"],"names":["require","config","module","exports","SERVERURL","GlobalStateContext","React","createContext","GlobalStateProvider","props","useState","firstName","authenticateduser","setAuthenticateduser","isAuthenticated","setIsAuthenticated","courses","setCourses","store","get","set","signIn","email","password","callback","base64","url","headers","Headers","append","encode","fetch","method","then","response","json","user","_id","userId","lastName","signOut","Provider","value","children","Header","context","useContext","loggedInUser","isAuth","className","to","withRouter","setEmail","setPassword","message","setMesage","callBack","flag","history","push","Consumer","Fragment","id","name","type","placeholder","onChange","e","target","onClick","Authenticate","style","color","setFirstName","setLastName","confirmedpassword","setConfirmedpassword","errorMessage","setErrorMessage","emailAddress","body","JSON","stringify","error","console","log","createduser","CreateUser","href","useEffect","fetchCourses","map","course","key","pathname","state","title","version","xmlns","x","y","viewBox","points","NotFound","location","User","Object","keys","length","successmessage","source","description","estimatedTime","materialsNeeded","split","item","index","Forbidden","setTitle","setDescription","setEstimatedTime","setMaterialsNeeded","errors","updateData","PrivateRoute","component","options","LastComponent","process","App","exact","path","render","CreateCourse","Courses","CourseDetails","UpdateCourse","Boolean","window","hostname","match","ReactDOM","StrictMode","document","querySelector","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.274df5ef.chunk.js","sourcesContent":["const dotenv = require(\"dotenv\");\r\ndotenv.config();\r\nmodule.exports = {\r\n  // SERVERURL: process.env.REACT_APP_SERVERURL,\r\n  SERVERURL:\r\n    process.env.NODE_ENV === \"production\" // if running env i snetfli or 8888, bavcken apiu rul is same as website url\r\n      ? \"\"\r\n      : process.env.REACT_APP_SERVERURL, // if you run react using npm start, web site url is 3333, but backend is 8888\r\n};\r\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\nconst { SERVERURL } = require(\"./Config\");\r\n\r\nexport const GlobalStateContext = React.createContext();\r\n\r\n/* GlobalStateProvider :\r\n a component used to persist the authenticated user information in a global state-full component.\r\n*/\r\nconst GlobalStateProvider = (props) => {\r\n  const [authenticateduser, setAuthenticateduser] = useState({\r\n    firstName: \"Hello\",\r\n  });\r\n  // a boolean indicating whether the user is authenticated\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n\r\n  const [courses, setCourses] = useState([]);\r\n\r\n  // signIn: globally availabe method allowing the user to signIn\r\n  // callback: extra parameter to handle redirection of routes once API call (fetch request)\r\n  // completes\r\n  const signIn = (email, password, callback = () => {}) => {\r\n    let base64 = require(\"base-64\");\r\n    let url = `${SERVERURL}/users`;\r\n    let headers = new Headers();\r\n    headers.append(\r\n      \"Authorization\",\r\n      \"Basic \" + base64.encode(email + \":\" + password)\r\n    );\r\n\r\n    fetch(url, {\r\n      method: \"GET\",\r\n      headers: headers,\r\n    })\r\n      .then((response) => response.json())\r\n      .then((user) => {\r\n        if (user._id) {\r\n          // update the user information from the global store once they sign in\r\n          setAuthenticateduser({\r\n            email: email,\r\n            password: password,\r\n            userId: user._id,\r\n            firstName: user.firstName,\r\n            lastName: user.lastName,\r\n          });\r\n          setIsAuthenticated(true);\r\n          callback(true);\r\n        } else {\r\n          callback(false);\r\n        }\r\n      });\r\n  };\r\n\r\n  // signOut: globally availabe method allowing the user to signOut\r\n  const signOut = () => {\r\n    // clear the user from the global store once they sign out\r\n    setAuthenticateduser({\r\n      email: \"\",\r\n      password: \"\",\r\n      userId: 0,\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n    });\r\n    // set isAuthenticated to false once they log out\r\n    setIsAuthenticated(false);\r\n  };\r\n\r\n  const store = {\r\n    authenticateduser: { get: authenticateduser, set: setAuthenticateduser },\r\n    isAuthenticated: { get: isAuthenticated, set: setIsAuthenticated },\r\n    courses: { get: courses, set: setCourses },\r\n    signIn: signIn,\r\n    signOut: signOut,\r\n  };\r\n\r\n  return (\r\n    <GlobalStateContext.Provider value={store}>\r\n      {props.children}\r\n    </GlobalStateContext.Provider>\r\n  );\r\n};\r\n\r\nexport default GlobalStateProvider;\r\n","import React, { useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport { GlobalStateContext } from \"./Context\";\r\n\r\nfunction Header() {\r\n  const context = useContext(GlobalStateContext);\r\n  const loggedInUser = context.authenticateduser.get;\r\n  const isAuth = context.isAuthenticated.get;\r\n  return (\r\n    <>\r\n      <div className=\"header\">\r\n        <div className=\"bounds\">\r\n          <h1 className=\"header--logo\">Courses</h1>\r\n          <nav>\r\n            {isAuth && (\r\n              <span>\r\n                {\" \"}\r\n                Welcome {loggedInUser.firstName} {loggedInUser.lastName}!{\" \"}\r\n              </span>\r\n            )}\r\n\r\n            {isAuth && (\r\n              <Link className=\"signup\" to=\"/signout\">\r\n                Sign Out\r\n              </Link>\r\n            )}\r\n\r\n            {!isAuth && (\r\n              <Link className=\"signup\" to=\"/signup\">\r\n                Sign Up\r\n              </Link>\r\n            )}\r\n\r\n            {!isAuth && (\r\n              <Link className=\"signin\" to=\"/signin\">\r\n                Sign In\r\n              </Link>\r\n            )}\r\n          </nav>\r\n        </div>\r\n      </div>\r\n      <hr />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React, { useState, useContext } from \"react\";\r\nimport { withRouter } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport Header from \"./Header\";\r\nimport { GlobalStateContext } from \"./Context\";\r\n\r\nconst UserSignIn = (props) => {\r\n  const context = useContext(GlobalStateContext);\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [message, setMesage] = useState(\"\");\r\n\r\n  // callBack required for API Call,\r\n  // we don't want to redirect to \"/courses\", if the api call from the fetch context.signIn\r\n  // has not been completed yet,\r\n  // so we have to pass the redirection to /\"courses\" in a CallBack\r\n  const callBack = (flag) => {\r\n    if (!flag) setMesage(\"Email Address or Password is incorrect.\");\r\n    else props.history.push(\"/courses\");\r\n  };\r\n  const Authenticate = (email, password, callBack) => {\r\n    context.signIn(email, password, callBack);\r\n  };\r\n\r\n  return (\r\n    <GlobalStateContext.Consumer>\r\n      {() => (\r\n        <React.Fragment>\r\n          <div id=\"root\">\r\n            <Header />\r\n            <div className=\"bounds\">\r\n              <div className=\"grid-33 centered signin\">\r\n                <h1>User Sign In</h1>\r\n                <div>\r\n                  <form>\r\n                    <div>\r\n                      <input\r\n                        id=\"emailAddress\"\r\n                        name=\"emailAddress\"\r\n                        type=\"text\"\r\n                        className=\"\"\r\n                        placeholder=\"Email Address\"\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                      />\r\n                    </div>\r\n                    <div>\r\n                      <input\r\n                        id=\"password\"\r\n                        name=\"password\"\r\n                        type=\"password\"\r\n                        className=\"\"\r\n                        placeholder=\"Password\"\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                      />\r\n                    </div>\r\n                    <div className=\"grid-100 pad-bottom\">\r\n                      <button\r\n                        className=\"button\"\r\n                        type=\"button\"\r\n                        onClick={() => Authenticate(email, password, callBack)}\r\n                      >\r\n                        Sign In\r\n                      </button>\r\n                      <button\r\n                        className=\"button button-secondary\"\r\n                        onClick={() => props.history.push(\"/courses\")}\r\n                      >\r\n                        Cancel\r\n                      </button>\r\n                    </div>\r\n                    {message && <p style={{ color: \"red\" }}>{message}</p>}\r\n                  </form>\r\n                </div>\r\n                <p>&nbsp;</p>\r\n                <p>\r\n                  Don't have a user account?{\" \"}\r\n                  <Link to=\"/signup\">Click here</Link> to sign up!\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </React.Fragment>\r\n      )}\r\n    </GlobalStateContext.Consumer>\r\n  );\r\n};\r\n\r\nexport default withRouter(UserSignIn);\r\n","import React, { useState, useContext } from \"react\";\r\nimport \"./App.css\";\r\nimport { withRouter } from \"react-router\";\r\nimport Header from \"./Header\";\r\nimport { GlobalStateContext } from \"./Context\";\r\n\r\nfunction UserSignUp(props) {\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmedpassword, setConfirmedpassword] = useState(\"\");\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const context = useContext(GlobalStateContext);\r\n  const { SERVERURL } = require(\"./Config\");\r\n\r\n  const CreateUser = () => {\r\n    let url = `${SERVERURL}/user`;\r\n    if (confirmedpassword !== password) {\r\n      setErrorMessage(\"Password and confirmed password does not match.\");\r\n      return;\r\n    }\r\n    const user = {\r\n      firstName: firstName,\r\n      lastName: lastName,\r\n      emailAddress: email,\r\n      password: password,\r\n      confirmedpassword: confirmedpassword,\r\n    };\r\n\r\n    fetch(url, {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(user),\r\n    })\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((json) => {\r\n        if (json.error) {\r\n          console.log(\"error\", json.error);\r\n          setErrorMessage(json.error);\r\n        } else {\r\n          setErrorMessage(\"\");\r\n          console.log(json);\r\n          // update the user from the global state once they sign up\r\n          context.authenticateduser.set({\r\n            email: json.createduser.emailAddress,\r\n            password: password,\r\n            userId: json.createduser._id,\r\n            firstName: json.createduser.firstName,\r\n            lastName: json.createduser.lastName,\r\n          });\r\n          context.isAuthenticated.set(true);\r\n          props.history.push(\"/courses\");\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <GlobalStateContext.Consumer>\r\n      {() => (\r\n        <>\r\n          <Header />\r\n          <div className=\"bounds\">\r\n            <div className=\"grid-33 centered UserSignUp\">\r\n              <h1>User Sign Up</h1>\r\n              <div>\r\n                <form>\r\n                  <div>\r\n                    <input\r\n                      id=\"firstName\"\r\n                      name=\"firstName\"\r\n                      type=\"text\"\r\n                      className=\"\"\r\n                      placeholder=\"First Name\"\r\n                      value={firstName}\r\n                      onChange={(e) => setFirstName(e.target.value)}\r\n                    />\r\n                  </div>\r\n                  <div>\r\n                    <input\r\n                      id=\"lastName\"\r\n                      name=\"lastName\"\r\n                      type=\"text\"\r\n                      className=\"\"\r\n                      placeholder=\"Last Name\"\r\n                      value={lastName}\r\n                      onChange={(e) => setLastName(e.target.value)}\r\n                    />\r\n                  </div>\r\n                  <div>\r\n                    <input\r\n                      id=\"emailAddress\"\r\n                      name=\"emailAddress\"\r\n                      type=\"text\"\r\n                      className=\"\"\r\n                      placeholder=\"Email Address\"\r\n                      value={email}\r\n                      onChange={(e) => setEmail(e.target.value)}\r\n                    />\r\n                  </div>\r\n                  <div>\r\n                    <input\r\n                      id=\"password\"\r\n                      name=\"password\"\r\n                      type=\"password\"\r\n                      className=\"\"\r\n                      placeholder=\"Password\"\r\n                      value={password}\r\n                      onChange={(e) => setPassword(e.target.value)}\r\n                    />\r\n                  </div>\r\n                  <div>\r\n                    <input\r\n                      id=\"confirmPassword\"\r\n                      name=\"confirmPassword\"\r\n                      type=\"password\"\r\n                      className=\"\"\r\n                      placeholder=\"Confirm Password\"\r\n                      value={confirmedpassword}\r\n                      onChange={(e) => setConfirmedpassword(e.target.value)}\r\n                    />\r\n                  </div>\r\n                  <div className=\"grid-100 pad-bottom\">\r\n                    <button\r\n                      className=\"button\"\r\n                      type=\"button\"\r\n                      onClick={() => CreateUser()}\r\n                    >\r\n                      User Sign Up\r\n                    </button>\r\n                    <button\r\n                      className=\"button button-secondary\"\r\n                      onClick={() => props.history.push(\"/courses\")}\r\n                    >\r\n                      Cancel\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n                {errorMessage && <p style={{ color: \"red\" }}>{errorMessage}</p>}\r\n              </div>\r\n              <p>&nbsp;</p>\r\n              <p>\r\n                Already have a user account?{\" \"}\r\n                <a href=\"user-sign-in.html\">Click here</a> to sign in!\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </>\r\n      )}\r\n    </GlobalStateContext.Consumer>\r\n  );\r\n}\r\n\r\nexport default withRouter(UserSignUp);\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport \"./App.css\";\r\nimport Header from \"./Header\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { withRouter } from \"react-router\";\r\nimport { GlobalStateContext } from \"./Context\";\r\nconst { SERVERURL } = require(\"./Config\");\r\n\r\nfunction Courses(props) {\r\n  const [courses, setCourses] = useState([]);\r\n  const user = props.user;\r\n  console.log(\"user\", user);\r\n  console.log(\"props\", props);\r\n\r\n  const context = useContext(GlobalStateContext);\r\n  const loggedInUser = context.authenticateduser.get;\r\n\r\n  console.log(loggedInUser);\r\n  const email = loggedInUser.email;\r\n  const password = loggedInUser.password;\r\n  let base64 = require(\"base-64\");\r\n  let headers = new Headers();\r\n  headers.append(\"Content-Type\", \"application/json\");\r\n  headers.append(\r\n    \"Authorization\",\r\n    \"Basic \" + base64.encode(email + \":\" + password)\r\n  );\r\n\r\n  const fetchCourses = () => {\r\n    let url = `${SERVERURL}/courses`;\r\n    fetch(url, {\r\n      method: \"GET\",\r\n      headers: headers,\r\n    })\r\n      .then((response) => response.json())\r\n      .then((json) => {\r\n        setCourses(json);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchCourses();\r\n  }, []);\r\n\r\n  return (\r\n    // <GlobalStateContext.Consumer>\r\n    //   {() => (\r\n    <React.Fragment>\r\n      {/* header to test  Global State\r\n          data */}\r\n      {/* <h1>{context.authenticateduser.get.firstName}</h1> */}\r\n      <Header />\r\n      <div className=\"bounds\">\r\n        {console.log(\"courses\", courses)}\r\n        {courses.map((course) => {\r\n          // Only display the courses which belong to the user\r\n          // where the course's user id matches loggedInUser.userId\r\n          if (course.user._id === loggedInUser.userId)\r\n            return (\r\n              <div className=\"grid-33\" key={course._id}>\r\n                <Link\r\n                  className=\"course--module course--link\"\r\n                  to={{\r\n                    pathname: \"/courses/\" + course._id,\r\n                    state: {\r\n                      course: course,\r\n                    },\r\n                  }}\r\n                >\r\n                  <h4 className=\"course--label\">Course</h4>\r\n                  <h3 className=\"course--title\">{course.title}</h3>\r\n                </Link>\r\n              </div>\r\n            );\r\n        })}\r\n        <div className=\"grid-33\">\r\n          <Link\r\n            className=\"course--module course--add--module\"\r\n            to={{\r\n              pathname: \"/courses/create\",\r\n              state: {\r\n                user: user,\r\n              },\r\n            }}\r\n          >\r\n            <h3 className=\"course--add--title\">\r\n              <svg\r\n                version=\"1.1\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                x=\"0px\"\r\n                y=\"0px\"\r\n                viewBox=\"0 0 13 13\"\r\n                className=\"add\"\r\n              >\r\n                <polygon points=\"7,6 7,0 6,0 6,6 0,6 0,7 6,7 6,13 7,13 7,7 13,7 13,6 \"></polygon>\r\n              </svg>\r\n              New Course\r\n            </h3>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n    //   )}\r\n    // </GlobalStateContext.Consumer>\r\n  );\r\n}\r\n\r\nexport default withRouter(Courses);\r\n","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport \"./App.css\";\r\n\r\nfunction NotFound() {\r\n  return (\r\n    <>\r\n      <Header />\r\n      <div className=\"bounds\">\r\n        <h1>Not Found</h1>\r\n        <p>Sorry! We couldn't find the page you're looking for.</p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default NotFound;\r\n","import React, { useState, useContext } from \"react\";\r\nimport { withRouter } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Header from \"./Header\";\r\nimport \"./App.css\";\r\nimport ReactMarkdown from \"react-markdown\";\r\nimport { GlobalStateContext } from \"./Context\";\r\nconst { SERVERURL } = require(\"./Config\");\r\n\r\n// No need to use useEffect here,\r\n// Because useEffect will render after the first render\r\n// pass course details using props from Main.js\r\nfunction CourseDetails(props) {\r\n  const context = useContext(GlobalStateContext);\r\n  const loggedInUser = context.authenticateduser.get;\r\n  const isAuthenticated = context.isAuthenticated.get;\r\n  const { state = {} } = props.location; // set state to blank if props.location is nulll\r\n  const { course = {} } = state; // set course to blank if state is nulll\r\n  const { User: user = {} } = course; //course.User: the author of the book we got from backend,\r\n  // set user to blank if User is null\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n\r\n  console.log(\"course\", course);\r\n  console.log(loggedInUser);\r\n\r\n  const DeletingCourse = () => {\r\n    // if course is an empty object\r\n    if (Object.keys(course).length === 0) {\r\n      setErrorMessage(\"Course not found\");\r\n      return;\r\n    }\r\n\r\n    const email = loggedInUser.email;\r\n    const password = loggedInUser.password;\r\n\r\n    let base64 = require(\"base-64\");\r\n    console.log(\"course\", course);\r\n    let url = `${SERVERURL}/courses/delete/` + course._id;\r\n    let headers = new Headers();\r\n    headers.append(\"Content-Type\", \"application/json\");\r\n    headers.append(\r\n      \"Authorization\",\r\n      \"Basic \" + base64.encode(email + \":\" + password)\r\n    );\r\n\r\n    fetch(url, {\r\n      method: \"DELETE\",\r\n      headers: headers,\r\n    })\r\n      .then((response) => response.json())\r\n      .then((json) => {\r\n        // if response returned successmessage from backend\r\n        if (json.successmessage) {\r\n          props.history.push(`/courses`);\r\n        } else {\r\n          setErrorMessage(json.message);\r\n        }\r\n      });\r\n  };\r\n\r\n  console.log(\"loggedInUser\", loggedInUser);\r\n  console.log(\"course\", course);\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <div>\r\n        <div className=\"actions--bar\">\r\n          <div className=\"bounds\">\r\n            <div className=\"grid-100\">\r\n              {\" \"}\r\n              {/* if the course the user picked belongs to the user who logged in, then display update, delete */}\r\n              {isAuthenticated && (\r\n                <span>\r\n                  <Link\r\n                    className=\"button\"\r\n                    to={{\r\n                      pathname: \"/courses/\" + course._id + \"/update\",\r\n                      state: {\r\n                        course: course,\r\n                      },\r\n                    }}\r\n                  >\r\n                    Update Course\r\n                  </Link>\r\n                  <button\r\n                    className=\"button\"\r\n                    type=\"button\"\r\n                    onClick={DeletingCourse}\r\n                  >\r\n                    Delete Course\r\n                  </button>\r\n                </span>\r\n              )}\r\n              <Link className=\"button button-secondary\" to=\"/courses\">\r\n                Return to List\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"bounds course--detail\">\r\n          <div className=\"grid-66\">\r\n            {errorMessage && <p style={{ color: \"red\" }}>{errorMessage}</p>}\r\n            <div className=\"course--header\">\r\n              <h4 className=\"course--label\">Course</h4>\r\n              <h3 className=\"course--title\">{course.title}</h3>\r\n              <p>\r\n                By {user.firstName} {user.lastName} {/*author of the book*/}\r\n              </p>\r\n            </div>\r\n            <div className=\"course--description\">\r\n              <ReactMarkdown source={course.description} />\r\n            </div>\r\n          </div>\r\n          <div className=\"grid-25 grid-right\">\r\n            <div className=\"course--stats\">\r\n              <ul className=\"course--stats--list\">\r\n                <li className=\"course--stats--list--item\">\r\n                  <h4>Estimated Time</h4>\r\n                  <h3>{course.estimatedTime}</h3>\r\n                </li>\r\n                <li className=\"course--stats--list--item\">\r\n                  <h4>Materials Needed</h4>\r\n                  <ul>\r\n                    {course.materialsNeeded &&\r\n                      course.materialsNeeded.split(\"*\").map(\r\n                        (item, index) =>\r\n                          item && (\r\n                            <li key={index}>\r\n                              <ReactMarkdown source={item}></ReactMarkdown>\r\n                            </li>\r\n                          )\r\n                      )}\r\n                  </ul>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\nexport default withRouter(CourseDetails);\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport Header from \"./Header\";\r\n\r\nfunction Forbidden() {\r\n  return (\r\n    <>\r\n      <Header />\r\n      <div className=\"bounds\">\r\n        <h1>Forbidden</h1>\r\n        <p>Oh oh! You can't access this page.</p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Forbidden;\r\n","import React, { useState, useContext } from \"react\";\r\nimport { withRouter } from \"react-router\";\r\nimport Header from \"./Header\";\r\nimport \"./App.css\";\r\nimport { GlobalStateContext } from \"./Context\";\r\nconst { SERVERURL } = require(\"./Config\");\r\n\r\nfunction CreateCourse(props) {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [estimatedTime, setEstimatedTime] = useState(\"\");\r\n  const [materialsNeeded, setMaterialsNeeded] = useState(\"\");\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const context = useContext(GlobalStateContext);\r\n  const loggedInUser = context.authenticateduser.get;\r\n\r\n  console.log(\"loggedInUser\", loggedInUser);\r\n\r\n  const AddCourse = () => {\r\n    const course = {\r\n      title: title,\r\n      description: description,\r\n      estimatedTime: estimatedTime,\r\n      materialsNeeded: materialsNeeded,\r\n      userId: loggedInUser.userId, // add a book belonging to that user\r\n    };\r\n\r\n    const email = loggedInUser.email;\r\n    const password = loggedInUser.password;\r\n    let base64 = require(\"base-64\");\r\n    let url = `${SERVERURL}/courses/create`;\r\n    let headers = new Headers();\r\n    headers.append(\"Content-Type\", \"application/json\");\r\n    headers.append(\r\n      \"Authorization\",\r\n      \"Basic \" + base64.encode(email + \":\" + password)\r\n    );\r\n\r\n    fetch(url, {\r\n      method: \"POST\",\r\n      headers: headers,\r\n      body: JSON.stringify(course),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((json) => {\r\n        // if the course Id could be found from the db\r\n        if (json._id) {\r\n          props.history.push(\"/courses\");\r\n        } else {\r\n          setErrorMessage(json.errors);\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <div className=\"bounds course--detail\">\r\n        <h1>Create Course</h1>\r\n        <div>\r\n          <div>\r\n            <div className=\"validation-errors\">\r\n              {errorMessage && <p style={{ color: \"red\" }}>{errorMessage}</p>}\r\n            </div>\r\n          </div>\r\n          <form>\r\n            <div className=\"grid-66\">\r\n              <div className=\"course--header\">\r\n                <h4 className=\"course--label\">Course</h4>\r\n                <div>\r\n                  <input\r\n                    id=\"title\"\r\n                    name=\"title\"\r\n                    type=\"text\"\r\n                    className=\"input-title course--title--input\"\r\n                    placeholder=\"Course title...\"\r\n                    value={title}\r\n                    onChange={(e) => setTitle(e.target.value)}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"course--description\">\r\n                <div>\r\n                  <textarea\r\n                    id=\"description\"\r\n                    name=\"description\"\r\n                    className=\"\"\r\n                    placeholder=\"Course description...\"\r\n                    value={description}\r\n                    onChange={(e) => setDescription(e.target.value)}\r\n                  ></textarea>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"grid-25 grid-right\">\r\n              <div className=\"course--stats\">\r\n                <ul className=\"course--stats--list\">\r\n                  <li className=\"course--stats--list--item\">\r\n                    <h4>Estimated Time</h4>\r\n                    <div>\r\n                      <input\r\n                        id=\"estimatedTime\"\r\n                        name=\"estimatedTime\"\r\n                        type=\"text\"\r\n                        className=\"course--time--input\"\r\n                        placeholder=\"Hours\"\r\n                        value={estimatedTime}\r\n                        onChange={(e) => setEstimatedTime(e.target.value)}\r\n                      />\r\n                    </div>\r\n                  </li>\r\n                  <li className=\"course--stats--list--item\">\r\n                    <h4>Materials Needed</h4>\r\n                    <div>\r\n                      <textarea\r\n                        id=\"materialsNeeded\"\r\n                        name=\"materialsNeeded\"\r\n                        className=\"\"\r\n                        placeholder=\"List materials...\"\r\n                        value={materialsNeeded}\r\n                        onChange={(e) => setMaterialsNeeded(e.target.value)}\r\n                      ></textarea>\r\n                    </div>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n            <div className=\"grid-100 pad-bottom\">\r\n              <button className=\"button\" type=\"button\" onClick={AddCourse}>\r\n                Create Course\r\n              </button>\r\n              <button\r\n                className=\"button button-secondary\"\r\n                //onClick=\"event.preventDefault(); location.href='index.html';\"\r\n                onClick={() => props.history.push(\"/courses\")}\r\n              >\r\n                Cancel\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\n// export as WithRouter to access props\r\nexport default withRouter(CreateCourse);\r\n","import React, { useState, useContext } from \"react\";\r\nimport \"./App.css\";\r\nimport { withRouter } from \"react-router\";\r\nimport { GlobalStateContext } from \"./Context\";\r\nimport Header from \"./Header\";\r\nconst { SERVERURL } = require(\"./Config\");\r\n\r\nfunction UpdateCourse(props) {\r\n  const context = useContext(GlobalStateContext);\r\n  const loggedInUser = context.authenticateduser.get;\r\n  const { state = {} } = props.location; // set state to blank if props.location is null\r\n  const { course = {} } = state; // set course to blank if state is null\r\n  const [title, setTitle] = useState(course.title);\r\n  const [description, setDescription] = useState(course.description);\r\n  const [estimatedTime, setEstimatedTime] = useState(course.estimatedTime);\r\n  const [materialsNeeded, setMaterialsNeeded] = useState(\r\n    course.materialsNeeded\r\n  );\r\n  const [errorMessage, setErrorMessage] = useState([]);\r\n\r\n  const UpdatingCourse = () => {\r\n    // if course is  an empty object\r\n    if (Object.keys(course).length === 0) {\r\n      setErrorMessage([\"Course not found\"]);\r\n      return;\r\n    }\r\n\r\n    console.log(loggedInUser);\r\n\r\n    const updateData = {\r\n      title: title,\r\n      description: description,\r\n      estimatedTime: estimatedTime,\r\n      materialsNeeded: materialsNeeded,\r\n      userId: loggedInUser.userId,\r\n    };\r\n\r\n    const email = loggedInUser.email;\r\n    const password = loggedInUser.password;\r\n\r\n    let base64 = require(\"base-64\");\r\n    console.log(\"props.location\", props.location);\r\n    let url = `${SERVERURL}/courses/update/` + course._id;\r\n    let headers = new Headers();\r\n    headers.append(\"Content-Type\", \"application/json\");\r\n    headers.append(\r\n      \"Authorization\",\r\n      \"Basic \" + base64.encode(email + \":\" + password)\r\n    );\r\n\r\n    fetch(url, {\r\n      method: \"PUT\",\r\n      headers: headers,\r\n      body: JSON.stringify(updateData),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((json) => {\r\n        console.log(json);\r\n        // if the course Id could be found from the db\r\n        if (!json.errors) {\r\n          props.history.push(\"/courses\");\r\n        } else {\r\n          setErrorMessage(json.errors);\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <div className=\"bounds course--detail\">\r\n        <h1>Update Course</h1>\r\n        {errorMessage.length > 0 &&\r\n          errorMessage.map((error, index) => (\r\n            <p key={index} style={{ color: \"red\" }}>\r\n              {\" \"}\r\n              {error}{\" \"}\r\n            </p>\r\n          ))}\r\n        <div>\r\n          <form>\r\n            <div className=\"grid-66\">\r\n              <div className=\"course--header\">\r\n                <h4 className=\"course--label\">Course</h4>\r\n                <div>\r\n                  <input\r\n                    id=\"title\"\r\n                    name=\"title\"\r\n                    type=\"text\"\r\n                    className=\"input-title course--title--input\"\r\n                    placeholder=\"Course title...\"\r\n                    value={title}\r\n                    onChange={(e) => setTitle(e.target.value)}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"course--description\">\r\n                <div>\r\n                  <textarea\r\n                    id=\"description\"\r\n                    name=\"description\"\r\n                    className=\"\"\r\n                    placeholder=\"Course description...\"\r\n                    value={description}\r\n                    onChange={(e) => setDescription(e.target.value)}\r\n                  ></textarea>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"grid-25 grid-right\">\r\n              <div className=\"course--stats\">\r\n                <ul className=\"course--stats--list\">\r\n                  <li className=\"course--stats--list--item\">\r\n                    <h4>Estimated Time</h4>\r\n                    <div>\r\n                      <input\r\n                        id=\"estimatedTime\"\r\n                        name=\"estimatedTime\"\r\n                        type=\"text\"\r\n                        className=\"course--time--input\"\r\n                        placeholder=\"Hours\"\r\n                        value={estimatedTime}\r\n                        onChange={(e) => setEstimatedTime(e.target.value)}\r\n                      />\r\n                    </div>\r\n                  </li>\r\n                  <li className=\"course--stats--list--item\">\r\n                    <h4>Materials Needed</h4>\r\n                    <div>\r\n                      <textarea\r\n                        id=\"materialsNeeded\"\r\n                        name=\"materialsNeeded\"\r\n                        className=\"\"\r\n                        placeholder=\"List materials...\"\r\n                        value={materialsNeeded}\r\n                        onChange={(e) => setMaterialsNeeded(e.target.value)}\r\n                      ></textarea>\r\n                    </div>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n            <div className=\"grid-100 pad-bottom\">\r\n              <button className=\"button\" type=\"button\" onClick={UpdatingCourse}>\r\n                Update Course\r\n              </button>\r\n              <button\r\n                className=\"button button-secondary\"\r\n                //redirect to course details if user clicks on cancel\r\n                // with state containing the information of the course\r\n                // to be passed to CourseDetails as props\r\n                onClick={() =>\r\n                  props.history.push({\r\n                    pathname: \"/courses/\" + course.id,\r\n                    state: {\r\n                      course: course,\r\n                    },\r\n                  })\r\n                }\r\n              >\r\n                Cancel\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default withRouter(UpdateCourse);\r\n","import React, { useContext } from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport Forbidden from \"./Forbidden\";\r\nimport { GlobalStateContext } from \"./Context\";\r\n\r\nconst PrivateRoute = ({ component, ...options }) => {\r\n  const context = useContext(GlobalStateContext);\r\n  const isAuth = context.isAuthenticated.get;\r\n  const LastComponent = isAuth === true ? component : Forbidden;\r\n  return <Route {...options} component={LastComponent} />;\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import React, { useContext } from \"react\";\r\nimport \"./App.css\";\r\nimport Header from \"./Header\";\r\nimport { withRouter } from \"react-router\";\r\nimport { GlobalStateContext } from \"./Context\";\r\nconst { SERVERURL } = require(\"./Config\");\r\n\r\nfunction UserSignOut(props) {\r\n  const context = useContext(GlobalStateContext);\r\n  const SignOut = () => {\r\n    context.signOut();\r\n    props.history.push(\"/signin\");\r\n  };\r\n\r\n  return (\r\n    <GlobalStateContext.Consumer>\r\n      {() => (\r\n        <>\r\n          <Header />\r\n          <div className=\"bounds\">\r\n            <h1>Sign Out</h1>\r\n            <p>Are u sure you want to sign out? </p>\r\n            <button className=\"button\" type=\"button\" onClick={() => SignOut()}>\r\n              Sign Out\r\n            </button>\r\n          </div>\r\n        </>\r\n      )}\r\n    </GlobalStateContext.Consumer>\r\n  );\r\n}\r\n\r\nexport default withRouter(UserSignOut);\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport Header from \"./Header\";\r\nimport { withRouter } from \"react-router\";\r\nfunction Homepage() {\r\n  return (\r\n    <React.Fragment>\r\n      <Header />\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default withRouter(Homepage);\r\n","import React, { Fragment } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\nimport UserSignIn from \"./UserSignIn\";\nimport UserSignUp from \"./UserSignUp\";\nimport Courses from \"./Courses\";\nimport NotFound from \"./NotFound\";\nimport CourseDetails from \"./CourseDetails\";\nimport Forbidden from \"./Forbidden\";\nimport CreateCourse from \"./CreateCourse\";\nimport UpdateCourse from \"./UpdateCourse\";\nimport PrivateRoute from \"./PrivateRoute\";\nimport UserSignOut from \"./UserSignOut\";\nimport GlobalStateProvider from \"./Context.js\";\nimport Homepage from \"./Homepage\";\nrequire(\"dotenv\").config();\n\nconsole.log(process.env.NODE_ENV);\nconsole.log(process.env.REACT_APP_SERVERURL);\n\nconst mySubmitHandler = (event) => {\n  event.preventDefault();\n  alert(\"You are submitting \" + this.state.username);\n};\nconst myChangeHandler = (event) => {\n  this.setState({ username: event.target.value });\n};\n\nconst App = () => {\n  return (\n    <GlobalStateProvider>\n      <Fragment>\n        <Switch>\n          <Route exact path=\"/\" render={() => <Homepage />} />\n          <Route exact path=\"/signin\" render={() => <UserSignIn />} />\n          <Route exact path=\"/signup\" render={() => <UserSignUp />} />\n          <PrivateRoute exact path=\"/signout\" render={() => <UserSignOut />} />\n          <PrivateRoute\n            component={CreateCourse}\n            path=\"/courses/create\"\n          ></PrivateRoute>\n          <PrivateRoute\n            component={Courses}\n            exact\n            path=\"/courses\"\n          ></PrivateRoute>\n          <PrivateRoute\n            component={CourseDetails}\n            exact\n            path=\"/courses/:id\"\n          ></PrivateRoute>\n          <PrivateRoute\n            component={UpdateCourse}\n            exact\n            path={\"/courses/:id/update\"}\n          ></PrivateRoute>\n\n          <Route exact path=\"/forbidden\" component={Forbidden} />\n          <Route render={() => <NotFound />} />\n        </Switch>\n      </Fragment>\n    </GlobalStateProvider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.querySelector(\"#root\")\n);\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n "],"sourceRoot":""}